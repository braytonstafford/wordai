{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["'use strict';\n/**\n * This module provides access to the WordAI REST API\n * https://wordai.com/\n *\n * The API provides the ability to pass text in\n * and receive AI reworded and rewritten (spun) text in response.\n *\n * The author of this code has no formal relationship with WordAI.com and does not\n * claim to have created any of the facilities provided by WordAI.com.\n */\n\nconst request   = require('request');\nconst wordAiUrl = 'https://wordai.com/users/turing-api.php';\n\n\nlet apiOptions;\n\nclass WordAI {\n  constructor (options) {\n    if (!options) throw new Error('No options specified');\n    if (!options.quality) throw new Error('No uniqueness quality specified');\n    if (!options.email) throw new Error('No email specified');\n    if (!options.hash && !options.password) throw new Error('Neither a hash nor a password was specified');\n    apiOptions = options;\n  }\n\n  static spin (...args) {\n\n    const { options, cb } = splitArgsIntoOptionsAndCallback(args);\n    return getDataFromApi(wordAiUrl, options, cb);\n  }\n}\n\n/**\n * Takes a variable-length array that represents arguments to a function and attempts to split it into\n * an 'options' object and a 'cb' callback function.\n * @param {Array}   args The arguments to the function\n * @return {Object}\n */\nfunction splitArgsIntoOptionsAndCallback (args) {\n  let options;\n  let cb;\n  if (args.length > 1) {\n    options = args[0];\n    cb = args[1];\n  } else if ('object' === typeof args[0]) {\n    options = args[0];\n  } else if ('function' === typeof args[0]) {\n    cb = args[0];\n  }\n  return { options, cb };\n}\n\n/**\n * Takes a URL string and returns a Promise containing\n * a buffer with the data from the web.\n * @param  {String} url      A URL String\n * @param  {Object} options  An object to be used for options passed to WordAI API\n * @param {Function} cb      A function passed to this function as a parameter\n * @return {Promise<Buffer>} A Promise containing a Buffer\n */\nfunction getDataFromApi(url, options, cb) {\n  let useCallback = 'function' === typeof cb;\n  if (useCallback && !options.text) return cb(null, { error: \"WordAI Error: No text specified\", status: \"Failure\" });\n  if (!options.text) throw new Error(\"WordAI Error: No text specified\");\n  return new Promise((resolve, reject) => {\n    let formData = Object.assign({}, apiOptions, options, { s: options.text });\n    request.post({ url, formData }, (err, res, body) => {\n      if (err) {\n        console.log('WordAI Error: ', err, '\\nResponse: ', res)\n        if (useCallback) return cb(err);\n        return reject(err);\n      }\n      try {\n        const data = JSON.parse(body);\n        if (data.status === 'Failure') return reject(data.message)\n        if (useCallback) return cb(null, data);\n        return resolve(data);\n      } catch (e) {\n        console.log('WordAI Error: ', e)\n        if (useCallback) return cb(e);\n        return reject(e);\n      }\n    });\n  });\n}\n\nmodule.exports = WordAI;\n"],"names":["const","apiOptions","request","require","WordAI","constructor","options","Error","quality","email","hash","password","spin","args","cb","length","splitArgsIntoOptionsAndCallback","url","useCallback","text","error","status","Promise","resolve","reject","formData","Object","assign","s","post","err","res","body","console","log","data","JSON","parse","message","e","getDataFromApi","module","exports"],"mappings":"0IAYAA,IAIIC,EAJEC,EAAYC,QAAQ,WAMpBC,EACJC,SAAaC,OACNA,EAAS,MAAM,IAAIC,MAAM,4BACzBD,EAAQE,QAAS,MAAM,IAAID,MAAM,uCACjCD,EAAQG,MAAO,MAAM,IAAIF,MAAM,0BAC/BD,EAAQI,OAASJ,EAAQK,SAAU,MAAM,IAAIJ,MAAM,iDAC3CD,KAGRM,6EAaT,SAA0CC,OACpCP,EACAQ,SACAD,EAAKE,OAAS,GAChBT,EAAUO,EAAK,GACfC,EAAKD,EAAK,IACD,iBAAoBA,EAAK,GAClCP,EAAUO,EAAK,GACN,mBAAsBA,EAAK,KACpCC,EAAKD,EAAK,IAEL,SAAEP,KAASQ,GAtBQE,CAAgCH,UAiC5D,SAAwBI,EAAKX,EAASQ,OAChCI,EAAc,mBAAsBJ,KACpCI,IAAgBZ,EAAQa,KAAM,OAAOL,EAAG,KAAM,CAAEM,MAAO,kCAAmCC,OAAQ,gBACjGf,EAAQa,KAAM,MAAM,IAAIZ,MAAM,0CAC5B,IAAIe,iBAASC,EAASC,OACvBC,EAAWC,OAAOC,OAAO,GAAI1B,EAAYK,EAAS,CAAEsB,EAAGtB,EAAQa,OACnEjB,EAAQ2B,KAAK,KAvDC,mDAuDMJ,YAAaK,EAAKC,EAAKC,MACrCF,SACFG,QAAQC,IAAI,iBAAkBJ,EAAK,eAAgBC,GAC/Cb,EAAoBJ,EAAGgB,GACpBN,EAAOM,WAGRK,EAAOC,KAAKC,MAAML,SACJ,YAAhBG,EAAKd,OAA6BG,EAAOW,EAAKG,SAC9CpB,EAAoBJ,EAAG,KAAMqB,GAC1BZ,EAAQY,GACf,MAAOI,UACPN,QAAQC,IAAI,iBAAkBK,GAC1BrB,EAAoBJ,EAAGyB,GACpBf,EAAOe,QApDXC,CAjBO,mBA2ElBC,OAAOC,QAAUtC"}